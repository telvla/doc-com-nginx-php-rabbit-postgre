version: "3.1"
services:

  postgres:
    image: postgres:14.2-alpine
    container_name: ${PROJECT_NAME}-postgres
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - frontend
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PROJECT_NAME}-admin-postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_ADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}

  rabbitmq:
    image: rabbitmq:3.10-management #-alpine
    container_name: ${PROJECT_NAME}-rabbitmq
    volumes:
     # - ./etc/rabbitmq/:/etc/rabbitmq/
      - ./storage/rabbitmq/data/:/var/lib/rabbitmq/
      - ./storage/logs/rabbitmq/:/var/log/rabbitmq/
    environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - frontend
      - backend

  webserver:
    image: nginx:1.21.6-alpine
    container_name: ${PROJECT_NAME}-webserver
    working_dir: /application
    depends_on:
      - php-fpm
    volumes:
      - ./src:/application
      - ./etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx/:/var/log/nginx/
    ports:
      - "8080:80"
    networks:
      - backend
      - frontend

  php-fpm:
    build: etc/php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    working_dir: /application
    volumes:
      - ./src:/application
      - ./etc/php-fpm/php-ini-overrides.ini:/etc/php/8.1/fpm/conf.d/99-overrides.ini
    networks:
      - backend

networks:
  backend:
  frontend:


